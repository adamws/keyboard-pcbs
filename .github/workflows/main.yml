name: Main Workflow

on:
  push:
  schedule:
    - cron: "0 10 * * *"
      branches:
        - master

env:
  IMAGE_NAME: keyboard-pcbs-maker

jobs:
  check_condition:
    name: Check Condition
    runs-on: ubuntu-latest
    outputs:
      run_generate: ${{ steps.check.outputs.generate }}

    steps:
    - name: Check if required to regenerate
      id: check
      run: |
        if [[ "${{ github.event_name }}" = "schedule" ]]; then
          wget https://raw.githubusercontent.com/adamws/keyboard-pcbs/gh-pages/revision.txt
          previous_revision=$(cat revision.txt)
          current_revision=$(git ls-remote https://github.com/the-via/keyboards.git HEAD | awk '{print $1}')
          echo "Previous used via revision: '$previous_revision'"
          echo "Current via revision: '$current_revision'"

          if [ "$previous_revision" = "$current_revision" ]; then
              echo "Revisions are equal, nothing to regenerate"
              echo "generate=false" >> $GITHUB_OUTPUT
          else
              echo "Revisions are different, run generate"
              echo "generate=true" >> $GITHUB_OUTPUT
          fi
        else
          echo "Event is not a schedule event. Setting generate to true."
          echo "generate=true" >> $GITHUB_OUTPUT
        fi

  build_image:
    runs-on: ubuntu-latest
    needs: check_condition
    if: needs.check_condition.outputs.run_generate == 'true'
    permissions:
      packages: write
      contents: read
    defaults:
      run:
        working-directory: ./docker
    outputs:
      image_version: ${{ steps.push.outputs.image_version }}

    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        id: push
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          echo "image_version=$VERSION" >> $GITHUB_OUTPUT

  generate:
    strategy:
      matrix:
        part: [1, 2, 3, 4, 5, 6, 7, 8]
    name: Generate PCBs and layout images
    runs-on: ubuntu-latest
    needs: build_image
    container: ghcr.io/adamws/keyboard-pcbs-maker:${{ needs.build_image.outputs.image_version }}

    steps:
    - uses: actions/checkout@v4
    - name: Run
      run: |
        python3 via_layouts_to_boards.py generate -n ${{ matrix.part }} -parts 8
    - uses: actions/upload-artifact@v4
      with:
        name: gh-pages-${{ matrix.part }}
        path: gh-pages/*
        retention-days: 1
        if-no-files-found: error

  collect-and-deploy:
    name: Collect and deploy results
    runs-on: ubuntu-latest
    needs: generate
    container: ghcr.io/adamws/keyboard-pcbs-maker:develop

    steps:
    - uses: actions/checkout@v4
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: gh-pages
        pattern: gh-pages-*
        merge-multiple: true
    - name: Run
      run: |
        python3 via_layouts_to_boards.py collect $([[ "${{ github.ref }}" == "refs/heads/master" ]] && echo "-gh")
    - name: Optimize
      run: |
        # remove whitespace-only lines
        sed -i '/^[[:space:]]*$/d' ./gh-pages/index.html
        # minimize layout svgs
        python3 minimize.py
    - uses: geekyeggo/delete-artifact@v5
      with:
        name: gh-pages-*
    - uses: actions/upload-artifact@v4
      with:
        name: gh-pages-final
        path: gh-pages/*
        retention-days: 1
        if-no-files-found: error
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v4
      if: ${{ github.ref == 'refs/heads/master' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: ./gh-pages
        enable_jekyll: false
        force_orphan: true

